type Query {
    # 用户列表
    users(filter: UserFilter, page: Int = 1, pageSize: Int = 15, orderBy: OrderBy): UserConnection
    # 根据用户编号查询用户信息
    findUserById(userId:ID!):User
}

type Mutation {
    # 新增用户
    createUser(input: UserCreateInput!): User
    # 新增权限
    createMicroserviceAuthority(input:AuthorityInput):Authority
    # 修改权限
    updateMicroserviceAuthority(id:ID!,merge:Boolean = true,input:AuthorityInput):Authority
    # 分配用户-权限
    #createMicroserviceUserAuthority(input:):User
}

input UserCreateInput {
    #登录名
    username:String!
    #登录密码
    password:String!
}

input UserFilter {
    username_contains: String
}

type UserConnection {
    # 总数据条数
    totalCount: Int
    # 每页显示条数
    pageSize: Int
    # 总页数
    totalPage: Int
    # 当前页
    currentPage: Int
    edges: [UserEdge]
    pageInfo: PageInfo
}
type UserEdge{
    cursor: String
    node: User
}

type User {
    id:ID
    #登录名
    username:String
    #登录密码
    password:String
    # 创建人
    creator: String
    # 修改人
    updator: String
    # 创建时间
    createdAt: Date
    # 修改时间
    updatedAt: Date
}

# 页信息
type PageInfo {
    # 是否存在下一页
    hasNextPage: Boolean
    # 是否存在上一页
    hasPreviousPage: Boolean
    # 数据页第一个游标
    startCursor: String
    # 数据页最后一个游标
    endCursor: String
}


